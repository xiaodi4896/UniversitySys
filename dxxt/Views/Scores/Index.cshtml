@model ScoreIndexViewModel

@{
    ViewData["Title"] = "Scores Index";
}

<h1>Scores Index</h1>

<p>
    <a asp-action="Create" class="btn btn-primary">Create Score / Enroll Subject</a>
</p>

<!-- Search Form -->
<form asp-action="Index" method="get" class="form-inline mb-3">
    <input type="text" name="searchQuery" id="searchQuery" class="form-control mr-2" placeholder="Search Student Name" />
    <button type="submit" class="btn btn-outline-secondary">Search</button>
</form>


<!-- Scores Table -->
<table class="table table-hover table-bordered">
    <thead class="thead-light">
        <tr>
            <th>@Html.DisplayNameFor(model => model.Scores.FirstOrDefault().StudentName)</th>
            <th>@Html.DisplayNameFor(model => model.Scores.FirstOrDefault().SubjectName)</th>
            <th>@Html.DisplayNameFor(model => model.Scores.FirstOrDefault().Marks)</th>
            <th>Grade</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var score in Model.Scores)
        {
            <tr>
                <td>@score.StudentName</td>
                <td>@score.SubjectName</td>
                <td>@(score.Marks.HasValue ? score.Marks.Value.ToString() : "--")</td>
                <td>@GetGrade(score.Marks)</td>
                <td>
                    <a asp-action="Edit" asp-route-id="@score.ScoreID" class="btn btn-sm btn-info mr-1">Edit Score</a>
                    <a asp-action="Details" asp-route-id="@score.ScoreID" class="btn btn-sm btn-primary mr-1">Details</a>
                    <a asp-action="Delete" asp-route-id="@score.ScoreID" class="btn btn-sm btn-danger">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Pagination Controls -->
<nav aria-label="Page navigation">
    <ul class="pagination">
        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                <a class="page-link" asp-action="Index" asp-route-pageNumber="@i">@i</a>
            </li>
        }
    </ul>
</nav>

@section Scripts {
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
    <script>
        $(document).ready(function () {
            var debounceTimeout;

            $('#searchQuery').on('keyup', function () {
                clearTimeout(debounceTimeout);
                debounceTimeout = setTimeout(function () {
                    $('form').submit();
                }, 700);
            });
        });
    </script>
}

@functions {
    private string GetGrade(decimal? marks)
    {
        if (!marks.HasValue) return "N/A";
        if (marks.Value >= 90) return "A+";
        if (marks.Value >= 80) return "A";
        if (marks.Value >= 70) return "B";
        if (marks.Value >= 60) return "C";
        if (marks.Value >= 50) return "D";
        return "F";
    }
}
